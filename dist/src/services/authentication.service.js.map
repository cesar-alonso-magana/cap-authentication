{"version":3,"file":"authentication.service.js","sourceRoot":"","sources":["../../../src/services/authentication.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { ConfigService } from './config.service';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CredentialsInterface } from '../interfaces/credentials.interface';\nimport { LoopbackResponseInterface } from '../interfaces/loopback-response.interface';\n\n \n@Injectable()\nexport class AuthenticationService {\n    \n    _token: string;\n    isLoggedIn: boolean = false;\n    userData: any = {};\n\n    private actionUrl: string;\n    private httpOptions: any;\n\n    constructor(\n        private _http: HttpClient, \n        private _config: ConfigService\n    ) {\n        this.httpOptions = {\n            headers: new HttpHeaders({ \n                'Content-Type': 'application/json'\n            })\n        };\n        this.actionUrl = `${this._config.apiUrl}${this._config.loginEndpoint}`;\n        this._token = localStorage.getItem('token') || '';\n    }\n\n    login(credentials: CredentialsInterface) {\n        \n        const toAdd = JSON.stringify(credentials);\n\n        return this._http.post<LoopbackResponseInterface>(`${this.actionUrl}/login`, toAdd, this.httpOptions)\n            .pipe(\n                map(response => response),\n                catchError(this.handleError),\n                tap((response: any) => {\n                    if (response.id !== undefined) {\n                        this.isLoggedIn = true;\n                        this._token = response.id;\n                        localStorage.setItem('isLoggedIn', 'true'); \n                        localStorage.setItem('userId', response.userId || '');\n                        localStorage.setItem('created', response.created || '');\n                        localStorage.setItem('token', response.id);\n                    } \n                    return response;\n                })\n            );\n    }\n\n    changePassword(credentials: CredentialsInterface) {\n        const newValues = {\n            oldPassword: credentials.password,\n            newPassword: credentials.repassword\n        }\n        const toAdd = JSON.stringify(newValues);\n\n        return this._http.post<any>(`${this.actionUrl}/change-password?access_token=${this._token}`, toAdd, this.httpOptions)\n            .pipe(\n                map(response => response),\n                catchError(this.handleError),\n                tap((response: any) => {\n                    return response;\n                })\n            );\n    }\n\n    register(credentials: CredentialsInterface) {\n        \n        const toAdd = JSON.stringify(credentials);\n\n        return this._http.post<LoopbackResponseInterface>(`${this.actionUrl}/`, toAdd, this.httpOptions)\n            .pipe(\n                map(response => response),\n                catchError(this.handleError),\n                tap((response: any) => {\n                    return response;\n                })\n            );\n    }\n\n    logout(): void {\n        this.isLoggedIn = false;\n        this._token = '';\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('created');\n        console.log('logout', 'Has cerrado sesi√≥n correctamente');\n    }\n    \n    token(): string {\n        return this._token;\n    }\n        \n    isAuthenticated() {\n        if (this.isLoggedIn) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    private handleError(error: any) {\n        console.log(error);\n        return Observable.throw(error || 'Server error');\n    }\n\n    saveSocialMediaData(data:any){\n        this.userData = data;\n    }\n\n    getUserData():any{\n        if(this.userData.length !== 0){\n            return this.userData;\n        }\n    }\n\n}\n"]}