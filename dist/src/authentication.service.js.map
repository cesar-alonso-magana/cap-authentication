{"version":3,"file":"authentication.service.js","sourceRoot":"","sources":["../../src/authentication.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { ConfigService } from './config.service';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { CredentialsInterface } from './credentials.interface';\r\nimport { LoopbackResponseInterface } from './loopback-response.interface';\r\n\r\n \r\n@Injectable()\r\nexport class AuthenticationService {\r\n    \r\n    _token: string;\r\n    isLoggedIn: boolean = false;\r\n\r\n    private actionUrl: string;\r\n    private httpOptions: any;\r\n\r\n    constructor(\r\n        private _http: HttpClient, \r\n        private _config: ConfigService\r\n    ) {\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({ \r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n        this.actionUrl = `${this._config.apiUrl}${this._config.loginEndpoint}`;\r\n        this._token = localStorage.getItem('token') || '';\r\n    }\r\n\r\n    login(credentials: CredentialsInterface) {\r\n        \r\n        const toAdd = JSON.stringify(credentials);\r\n\r\n        return this._http.post<LoopbackResponseInterface>(`${this.actionUrl}/login`, toAdd, this.httpOptions)\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(this.handleError),\r\n                tap((response: any) => {\r\n                    if (response.id !== undefined) {\r\n                        this.isLoggedIn = true;\r\n                        this._token = response.id;\r\n                        localStorage.setItem('isLoggedIn', 'true'); \r\n                        localStorage.setItem('userId', response.userId || '');\r\n                        localStorage.setItem('created', response.created || '');\r\n                        localStorage.setItem('token', response.id);\r\n                    } \r\n                    return response;\r\n                })\r\n            );\r\n    }\r\n\r\n    changePassword(credentials: CredentialsInterface) {\r\n        const newValues = {\r\n            oldPassword: credentials.password,\r\n            newPassword: credentials.repassword\r\n        }\r\n        const toAdd = JSON.stringify(newValues);\r\n\r\n        return this._http.post<any>(`${this.actionUrl}/change-password?access_token=${this._token}`, toAdd, this.httpOptions)\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(this.handleError),\r\n                tap((response: any) => {\r\n                    return response;\r\n                })\r\n            );\r\n    }\r\n\r\n    register(credentials: CredentialsInterface) {\r\n        \r\n        const toAdd = JSON.stringify(credentials);\r\n\r\n        return this._http.post<LoopbackResponseInterface>(`${this.actionUrl}/`, toAdd, this.httpOptions)\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(this.handleError),\r\n                tap((response: any) => {\r\n                    return response;\r\n                })\r\n            );\r\n    }\r\n\r\n    logout(): void {\r\n        this.isLoggedIn = false;\r\n        this._token = '';\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('created');\r\n        console.log('logout', 'Has cerrado sesi√≥n correctamente');\r\n    }\r\n    \r\n    token(): string {\r\n        return this._token;\r\n    }\r\n        \r\n    isAuthenticated() {\r\n        if (this.isLoggedIn) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    private handleError(error: any) {\r\n        console.log(error);\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n\r\n}\r\n"]}