!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("ionic-angular"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common/http","rxjs","rxjs/operators","@angular/forms","ionic-angular","@angular/common"],o):o((t.ng=t.ng||{},t.ng.capauthentication={}),t.ng.core,null,null,null,null,null,null)}(this,function(t,n,e,o,i,r,a,s){"use strict";var l=function(){function t(t){t&&(this.apiUrl=t.apiUrl,this.loginEndpoint=t.loginEndpoint)}return t.decorators=[{type:n.Injectable}],t.ctorParameters=function(){return[{type:t,decorators:[{type:n.Optional}]}]},t}(),u=function(){function t(t,o){this._http=t,this._config=o,this.isLoggedIn=!1,this.httpOptions={headers:new e.HttpHeaders({"Content-Type":"application/json"})},this.actionUrl=""+this._config.apiUrl+this._config.loginEndpoint,this._token=localStorage.getItem("token")||""}return t.prototype.login=function(t){var o=this,n=JSON.stringify(t);return this._http.post(this.actionUrl+"/login",n,this.httpOptions).pipe(i.map(function(t){return t}),i.catchError(this.handleError),i.tap(function(t){return void 0!==t.id&&(o.isLoggedIn=!0,o._token=t.id,localStorage.setItem("isLoggedIn","true"),localStorage.setItem("userId",t.userId||""),localStorage.setItem("created",t.created||""),localStorage.setItem("token",t.id)),t}))},t.prototype.changePassword=function(t){var o={oldPassword:t.password,newPassword:t.repassword},n=JSON.stringify(o);return this._http.post(this.actionUrl+"/change-password?access_token="+this._token,n,this.httpOptions).pipe(i.map(function(t){return t}),i.catchError(this.handleError),i.tap(function(t){return t}))},t.prototype.register=function(t){var o=JSON.stringify(t);return this._http.post(this.actionUrl+"/",o,this.httpOptions).pipe(i.map(function(t){return t}),i.catchError(this.handleError),i.tap(function(t){return t}))},t.prototype.logout=function(){this.isLoggedIn=!1,this._token="",localStorage.removeItem("isLoggedIn"),localStorage.removeItem("token"),localStorage.removeItem("userId"),localStorage.removeItem("created"),console.log("logout","Has cerrado sesi√≥n correctamente")},t.prototype.token=function(){return this._token},t.prototype.isAuthenticated=function(){return!!this.isLoggedIn},t.prototype.handleError=function(t){return console.log(t),o.Observable.throw(t||"Server error")},t.decorators=[{type:n.Injectable}],t.ctorParameters=function(){return[{type:e.HttpClient},{type:l}]},t}(),c=function(){function t(t,o){this.authenticationService=t,this.formBuilder=o,this.submit=new n.EventEmitter,this.changePage=new n.EventEmitter,this.credentials={email:"",password:"",repassword:""}}return t.prototype.ngOnInit=function(){this.registerform=this.formBuilder.group({password:["",[r.Validators.required,r.Validators.minLength(3)]],repassword:["",[r.Validators.required,r.Validators.minLength(3)]],email:["",[r.Validators.required,r.Validators.minLength(3)]]})},t.prototype.onSubmit=function(){var o=this;if(this.credentials.password!==this.credentials.repassword)return console.log("passwords must be equal"),!1;this.authenticationService.register(this.credentials).subscribe(function(t){o.submit.emit(t)})},t.prototype.loginAccount=function(){this.changePage.emit(!0)},t.decorators=[{type:n.Component,args:[{selector:"auth-app-register",template:'\n<ion-grid>\n   <ion-row>\n     <ion-col  col-12 col-xl-8 offset-xl-2 col-lg-10 offset-lg-1>\n        <ion-list>\n            <form [formGroup]="registerform" (ngSubmit)="onSubmit()">\n                <ion-item>\n                    <ion-label stacked primary>Email</ion-label>\n                    <ion-input [(ngModel)]="credentials.email" formControlName="email"\n                            type="text" id="email" spellcheck="false" autocapitalize="off" ngDefaultControl>\n                    </ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-label stacked primary>Password</ion-label>\n                    <ion-input [(ngModel)]="credentials.password" formControlName="password" type="text" id="password">\n                    </ion-input>\n                </ion-item>\n                <ion-item>\n                    <ion-label stacked primary>Repeat Password</ion-label>\n                    <ion-input [(ngModel)]="credentials.repassword" formControlName="repassword" type="text" id="repassword">\n                    </ion-input>\n                </ion-item>\n                <button ion-button type="submit" block full primary [disabled]="!registerform.valid">Register</button>\n                <button ion-button type="submit" block secondary (click)="loginAccount()">Login to account</button>\n            </form>\n        </ion-list>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n    ',styles:[""],encapsulation:n.ViewEncapsulation.Emulated}]}],t.ctorParameters=function(){return[{type:u},{type:r.FormBuilder}]},t.propDecorators={submit:[{type:n.Output}],changePage:[{type:n.Output}]},t}(),p=function(){function t(t,o){this.authenticationService=t,this.formBuilder=o,this.submit=new n.EventEmitter,this.changePage=new n.EventEmitter,this.credentials={email:"",password:""}}return t.prototype.ngOnInit=function(){this.loginform=this.formBuilder.group({password:["",[r.Validators.required,r.Validators.minLength(3)]],email:["",r.Validators.required]})},t.prototype.onSubmit=function(){var o=this;this.authenticationService.login(this.credentials).subscribe(function(t){o.submit.emit(t)})},t.prototype.createAccount=function(){this.changePage.emit(!0)},t.decorators=[{type:n.Component,args:[{selector:"auth-app-login",template:' \n<ion-grid>\n   <ion-row>\n     <ion-col  col-12 col-xl-8 offset-xl-2 col-lg-10 offset-lg-1>\n        <ion-list>\n            <form [formGroup]="loginform" (ngSubmit)="onSubmit()">\n            <ion-item>\n                <ion-label stacked primary>Email</ion-label>\n                <ion-input [(ngModel)]="credentials.email" formControlName="email"\n                        type="text" id="email" spellcheck="false" autocapitalize="off" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label stacked primary>Password</ion-label>\n                <ion-input [(ngModel)]="credentials.password" formControlName="password" type="text" id="password" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n            <button ion-button type="submit" block primary [disabled]="!loginform.valid">Login</button>\n            <button ion-button type="submit" block secondary (click)="createAccount()">Create an account</button>\n            </form>\n        </ion-list>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n        ',styles:[""],encapsulation:n.ViewEncapsulation.Emulated}]}],t.ctorParameters=function(){return[{type:u},{type:r.FormBuilder}]},t.propDecorators={submit:[{type:n.Output}],changePage:[{type:n.Output}]},t}(),d=function(){function t(t,o){this.authenticationService=t,this.formBuilder=o,this.submit=new n.EventEmitter,this.changePage=new n.EventEmitter,this.credentials={password:"",repassword:""},this.credentials={password:"",repassword:""}}return t.prototype.ngOnInit=function(){this.changeform=this.formBuilder.group({password:["",[r.Validators.required,r.Validators.minLength(3)]],repassword:["",[r.Validators.required,r.Validators.minLength(3)]]})},t.prototype.onSubmit=function(){var o=this;this.authenticationService.changePassword(this.changeform.value).subscribe(function(t){o.submit.emit(t)})},t.prototype.loginAccount=function(){this.changePage.emit(!0)},t.decorators=[{type:n.Component,args:[{selector:"auth-app-change-password",template:'\n<ion-grid>\n   <ion-row>\n     <ion-col  col-12 col-xl-8 offset-xl-2 col-lg-10 offset-lg-1>\n        <ion-list>\n            <form [formGroup]="changeform" (ngSubmit)="onSubmit()">\n            <ion-item>\n                <ion-label stacked primary>Password</ion-label>\n                <ion-input [(ngModel)]="credentials.password" formControlName="password" type="text" id="password" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label stacked primary>Repeat Password</ion-label>\n                <ion-input [(ngModel)]="credentials.repassword" formControlName="repassword" type="text" id="repassword" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n            <button ion-button type="submit" block full primary [disabled]="!changeform.valid">Change Password</button>\n            <button ion-button type="submit" block secondary (click)="loginAccount()">Login to account</button>\n            </form>\n        </ion-list>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n  ',styles:[""],encapsulation:n.ViewEncapsulation.Emulated}]}],t.ctorParameters=function(){return[{type:u},{type:r.FormBuilder}]},t.propDecorators={submit:[{type:n.Output}],changePage:[{type:n.Output}]},t}(),m=function(){function o(){}return o.forRoot=function(t){return{ngModule:o,providers:[{provide:l,useValue:t}]}},o.decorators=[{type:n.NgModule,args:[{declarations:[p,c,d],imports:[a.IonicModule,e.HttpClientModule,r.ReactiveFormsModule,s.CommonModule],exports:[e.HttpClientModule,r.ReactiveFormsModule,s.CommonModule,p,c,d],providers:[u],schemas:[n.CUSTOM_ELEMENTS_SCHEMA]}]}],o}();t.AuthenticationModule=m,t.AuthenticationService=u,t.AuthLoginComponent=p,t.AuthRegisterComponent=c,t.AuthChangePasswordComponent=d,Object.defineProperty(t,"__esModule",{value:!0})});